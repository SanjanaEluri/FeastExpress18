{"ast":null,"code":"// import React, { useContext, useState, useEffect } from 'react'\n// import { store } from '../App'\n// import CustomerNavbar from '../components/CustomerNavbar'\n// import { useCart } from './ContextReducer'\n// import { useNavigate } from 'react-router-dom'\n// import axios from 'axios'\n\n// function Cart() {\n\n//   const [cart, setCart] = useCart()\n\n//   const [token, setToken] = useContext(store)\n//   const [data, setData] = useState(null)\n\n//   const navigate = useNavigate()\n\n//   const removeCartItem = (pid) => {\n//     try {\n//       const myCart = [...cart]\n//       let index = myCart.findIndex(item => item._id === pid)\n//       myCart.splice(index, 1)\n//       setCart(myCart);\n//       localStorage.setItem('cart', JSON.stringify(myCart))\n//     }\n//     catch (err) {\n//       console.log(err)\n//     }\n//   }\n\n//   const totalPrice = () => {\n//     try {\n//       let total = 0;\n//       cart?.map((item) => {\n//         return (\n//           total = total + item.Price\n//         )\n//       })\n//       return total.toLocaleString(\"en-US\", {\n//         style: \"currency\",\n//         currency: \"INR\",\n//       })\n//     }\n//     catch (err) {\n//       console.log(err)\n//     }\n//   }\n\n//   const handlePayment = async (req, res) => {\n//     try {\n//       await axios.post('http://localhost:2001/cart', { cart, data })\n//       localStorage.removeItem('cart')\n//       setCart([])\n//       navigate('/order')\n//     }\n//     catch (err) {\n//       console.log(err)\n//     }\n//   }\n\n//   useEffect(() => {\n//     axios.get('http://localhost:2001/cart', {\n//       headers: {\n//         'x-token': token\n//       }\n//     })\n//       .then(res => setData(res.data))\n//       .catch(err => console.log(err))\n//   }, [token])\n\n//   return (\n//     <>\n//       <CustomerNavbar />\n//       <div className='cart-container'>\n\n//         <h3><>My Cart</></h3>\n//         <h4><center>{`cart?.length ? You have ${cart.length} items in your cart : You Cart is Empty`}</center></h4>\n//         {/* <br /> */}\n//         <div className='cart-box'>\n//           <div className='cart-box-container'>\n//             {/* <h5>My Cart</h5> */}\n\n//             <div className='cart-list'>\n//               {\n//                 cart.map((item) => {\n//                   return (\n\n//                     <div className='cart-card-content'>\n//                       <img src={`/uploads/${item.image}`} alt={item.Itemname} />\n//                       <div className='cart-container-right'>\n//                         <h4>{item.Itemname}</h4>\n//                         <h6>Price : {item.Price}</h6>\n//                         <div className='btn-remove'>\n//                           <button className='btn btn-danger' onClick={() => removeCartItem(item._id)}>Remove</button>\n//                         </div>\n//                       </div>\n//                     </div>\n\n//                   )\n//                 })\n//               }\n//             </div>\n//           </div>\n//           <div className='cart-box-checkout'>\n//             <h5>Cart Summary</h5>\n//             <p>Total | Checkout | Payment</p>\n//             <hr />\n//             <h4>Total : {totalPrice()}</h4>\n//             {/* {\n//               data ? <p>{data._id}</p> : <p>Please Try Again Later</p>\n//             } */}\n\n//             <button onClick={handlePayment}>Make Payment</button>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   )\n// }\n\n// export default Cart","map":{"version":3,"names":[],"sources":["D:/MSWD/SDPPROJECT/frontendapp/feastexpress/src/components/Cart.js"],"sourcesContent":["// import React, { useContext, useState, useEffect } from 'react'\r\n// import { store } from '../App'\r\n// import CustomerNavbar from '../components/CustomerNavbar'\r\n// import { useCart } from './ContextReducer'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import axios from 'axios'\r\n\r\n\r\n// function Cart() {\r\n\r\n//   const [cart, setCart] = useCart()\r\n\r\n//   const [token, setToken] = useContext(store)\r\n//   const [data, setData] = useState(null)\r\n\r\n//   const navigate = useNavigate()\r\n\r\n//   const removeCartItem = (pid) => {\r\n//     try {\r\n//       const myCart = [...cart]\r\n//       let index = myCart.findIndex(item => item._id === pid)\r\n//       myCart.splice(index, 1)\r\n//       setCart(myCart);\r\n//       localStorage.setItem('cart', JSON.stringify(myCart))\r\n//     }\r\n//     catch (err) {\r\n//       console.log(err)\r\n//     }\r\n//   }\r\n\r\n//   const totalPrice = () => {\r\n//     try {\r\n//       let total = 0;\r\n//       cart?.map((item) => {\r\n//         return (\r\n//           total = total + item.Price\r\n//         )\r\n//       })\r\n//       return total.toLocaleString(\"en-US\", {\r\n//         style: \"currency\",\r\n//         currency: \"INR\",\r\n//       })\r\n//     }\r\n//     catch (err) {\r\n//       console.log(err)\r\n//     }\r\n//   }\r\n\r\n\r\n//   const handlePayment = async (req, res) => {\r\n//     try {\r\n//       await axios.post('http://localhost:2001/cart', { cart, data })\r\n//       localStorage.removeItem('cart')\r\n//       setCart([])\r\n//       navigate('/order')\r\n//     }\r\n//     catch (err) {\r\n//       console.log(err)\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:2001/cart', {\r\n//       headers: {\r\n//         'x-token': token\r\n//       }\r\n//     })\r\n//       .then(res => setData(res.data))\r\n//       .catch(err => console.log(err))\r\n//   }, [token])\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <CustomerNavbar />\r\n//       <div className='cart-container'>\r\n\r\n//         <h3><>My Cart</></h3>\r\n//         <h4><center>{`cart?.length ? You have ${cart.length} items in your cart : You Cart is Empty`}</center></h4>\r\n//         {/* <br /> */}\r\n//         <div className='cart-box'>\r\n//           <div className='cart-box-container'>\r\n//             {/* <h5>My Cart</h5> */}\r\n            \r\n//             <div className='cart-list'>\r\n//               {\r\n//                 cart.map((item) => {\r\n//                   return (\r\n\r\n//                     <div className='cart-card-content'>\r\n//                       <img src={`/uploads/${item.image}`} alt={item.Itemname} />\r\n//                       <div className='cart-container-right'>\r\n//                         <h4>{item.Itemname}</h4>\r\n//                         <h6>Price : {item.Price}</h6>\r\n//                         <div className='btn-remove'>\r\n//                           <button className='btn btn-danger' onClick={() => removeCartItem(item._id)}>Remove</button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                   )\r\n//                 })\r\n//               }\r\n//             </div>\r\n//           </div>\r\n//           <div className='cart-box-checkout'>\r\n//             <h5>Cart Summary</h5>\r\n//             <p>Total | Checkout | Payment</p>\r\n//             <hr />\r\n//             <h4>Total : {totalPrice()}</h4>\r\n//             {/* {\r\n//               data ? <p>{data._id}</p> : <p>Please Try Again Later</p>\r\n//             } */}\r\n\r\n//             <button onClick={handlePayment}>Make Payment</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Cart"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}